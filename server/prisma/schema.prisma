// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}
model User {
 id                 Int      @id @default(autoincrement())
 createdAt          DateTime @default(now())
 email              String   @unique @db.VarChar(320) 
 username           String   @unique @db.VarChar(128)
 password           String   @db.VarChar(128)
 verified           Boolean  @default(false)
 verification_token verification_token?
 blogs              Blog[]
 refreshTokens      RefreshToken[]
}

model Blog {
id           Int      @id @default(autoincrement())
createdAt    DateTime @default(now())
title        String   @unique @db.VarChar(255)
content      String   @unique @db.VarChar(2500)
userId       Int 
isDraft      Boolean
author       User     @relation(fields: [userId], references: [id])

}

model RefreshToken{
  id           Int      @id @default(autoincrement())
  jti          String   @unique @db.VarChar(30)
  createdAt    DateTime @default(now())
  token        String   @unique @db.VarChar(1000)
  userId       Int    
  user         User     @relation(fields: [userId], references: [id]) 
}

model verification_token {
  id        Int        @id @default(autoincrement())
  createdAt DateTime   @default(now())
  expiresAt DateTime
  token     String?    @unique
  userId    Int        @unique
  user      User       @relation( fields: [userId], references: [id])
}